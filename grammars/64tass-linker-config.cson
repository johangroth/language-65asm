# Syntax Highlighting for linker config files used with ld65 of the 64tass toolchain

scopeName: 'source.assembly.64tass-linker-config'
name: 'Linker Config File (64tass)'      # Name shown in Atom Editor grammar selection
# File extensions associated with this grammar
fileTypes: [
  'cfg'
  'txt'
]
# include all directives and commands the toolchain supports
patterns: [
  { include: '#comments' }
  { include: '#symbols' }
]

# Repository starts here ------------------------------------------------------
repository:

  # comments
  comments:
    patterns: [
      # hash comments
      {
        match:  '\\#.*$'
        name:   'comment.line.64tass-linker-config'
      }
    ]

  # symbols
  symbols:
    patterns: [
      # strings
      {
        begin: '"'
        beginCaptures:
          0:
            name: 'punctuation.definition.string.begin.64tass-linker-config'
        end: '"'
        endCaptures:
          0:
            name: 'punctuation.definition.string.end.64tass-linker-config'
        name: 'string.quoted.double.64tass-linker-config'
      }
      # hex, prefixed with dollar sign($)
      {
        match: '\\$\\b[a-fA-F0-9]+\\b'
        name: 'constant.numeric.hex.64tass-linker-config'
      }
      # hex, suffixed with h(h)
      {
        match: '\\b([a-fA-F0-9]+)h\\b'
        name: 'constant.numeric.hex.64tass-linker-config'
      }
      # binary
      {
        match: '%[01]+'
        name: 'constant.numeric.binary.64tass-linker-config'
      }
      # decimal
      {
        match: '\\b([0-9]+)\\b'
        name: 'constant.numeric.decimal.64tass-linker-config'
      }
      # areas
      {
        match: '\\b(?i:memory|segments|files|formats|features|symbols|once|lowcode|startup|zpsave)\\b'
        name: 'storage.modifier.64tass-linker-config'
      }
      # labels
      {
        captures:
          1: name: 'entity.name.function.label.64tass-linker-config'
        match: '\\b([A-Za-z0-9_]+):'
        name: 'meta.function.label.64tass-linker-config'
      }
      # attributes
      {
        match: '\\b(?i:load|type|define|start|size|fill|file|run|format|os|version|import|export|label|count|segment|order|default|addrsize|align)\\b'
        name: 'storage.modifier.64tass-linker-config'
      }
      # linker constants
      {
        match:  '\\b(__NAME_LOAD__|__NAME_RUN__|__NAME_SIZE__|__DATA_LOAD__|__DATA_RUN__|__DATA_SIZE__|__STACK_START__|__STACK_SIZE__|__STACK_LAST__|__STACK_FILEOFFS__)\\b'
        name:   'constant.language.64tass-linker-config'
      }
      # address sizes, functions
      {
        match:  '\\b(?i:direct|zeropage|zp|absolut|abs|near|far|long|dword|atari|cbm|cpu|generic|longbranch|yes|ro|rw|bss|weak)\\b'
        name:   'constant.other.64tass-linker-config'
      }
      # case sensitive symbols
      {
        match:  '(%\\bO|\\bo65)\\b'
        name:   'constant.other.64tass-linker-config'
      }
      # operators
      {
        match:  '='
        name:   'keyword.operator.64tass-linker-config'
      }
    ]
